{"version":3,"file":"static/js/427.b8e1e7f8.chunk.js","mappings":"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","sources":["helpers/yupSchema.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst regExp = {\n\n   name: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n   email: /^[ A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\s*?$/i,\n   password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n};\n\nexport const validationSchemaRegistation = yup.object().shape({\n  username: yup.string().min(3).matches(regExp.name, 'Name is not valid').required('Please Enter your name'),\n  email: yup.string().email().matches(regExp.email, 'Email is not valid').required('Please Enter your email'),\n  password: yup.string().min(6).max(16).matches(\n          regExp.password,\n          'Must Contain 6 Characters, One Uppercase, One Lowercase, One Number'\n        ).required('Please Enter your password'),\n});\n\nexport const validationSchemaLogin = yup.object().shape({\n  email: yup.string().email().matches(regExp.email, 'Email is not valid').required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n\n\n\n","import { styled } from '@mui/material/styles';\nimport {TextField , FormControl, Box, Paper}from '@mui/material';\nimport { Link } from 'react-router-dom';\n\n\nexport const MainContainer = styled(Paper)(({ theme }) => ({\n\n    display: 'flex',\n    flexDirection: 'column',\n      alignItems: 'center',\n      maxWidth: '500px',\n\n      margin: theme.spacing(0, 'auto'),\n      padding: theme.spacing(8, 0),\n      \n    }))\n    \n  \n\nexport const TittleContainer = styled(Box)(({ theme }) => ({\n   \n    marginBottom: theme.spacing(8),\n  }))\n \nexport const Title = styled('h2')(({ theme }) => ({\n   \n  fontWeight: theme.customFontWeight.extraLight,\n  fontFamily: theme.customFontFamily.authTittle,\n}))\n\n   \n\n  export const Formm = styled('form')(({ theme }) => ({\n   \n    maxWidth: '320px'\n  }))\n     \n \n \n export const Input = styled(TextField)(({ theme }) => ({\n   \n  width: '100%',\n  marginBottom: theme.spacing(7),\n}))\n    \n  \nexport const InputFormControl = styled(FormControl)(({ theme }) => ({\n   \n  width: '100%',\n  marginBottom: theme.spacing(7),\n}))\n \n\n  \n  \nexport const RegisterOrLoginBox = styled('p')(({ theme }) => ({\n   \n  textAlign: 'center',\n  marginTop: theme.spacing(8),\n}))\n\n\n\nexport const RegisterOrLoginLink = styled(Link)(({ theme }) => ({\n  color: theme.customColors.authLink\n \n}))\n","import * as React from 'react';\n\nimport {InputAdornment, IconButton, InputLabel, OutlinedInput, FormHelperText} from '@mui/material';\nimport {Visibility, VisibilityOff}from '@mui/icons-material';\nimport Button from '@mui/material/Button';\n\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/auth/operations';\n\nimport { validationSchemaRegistation } from '../../helpers/yupSchema';\n\nimport {MainContainer , TittleContainer , Title, Formm, Input, InputFormControl, RegisterOrLoginBox, RegisterOrLoginLink } from 'components/RegisterForm/RegisterForm.styled'\n\n\n\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchemaRegistation,\n    onSubmit: async (values) => {\n      const res = await dispatch(register( {\n        name: values.username,\n        email: values.email,\n        password: values.password,\n      }))\n      // console.log(res);\n      // console.log(values);\n\n      if (res.type === 'auth/register/fulfilled') {\n        formik.resetForm();\n      }\n      \n      // formik.resetForm();\n      \n    },\n  \n  });\n\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n\n\n  return (\n    <MainContainer elevation={1}>\n    \n    \n      <TittleContainer >\n        <Title>Create a PHONEBOOK account</Title>\n      </TittleContainer>\n      \n        <Formm  autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          \n            <Input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              // variant=\"standard\" \n          label=\"username\"\n         \n              value={formik.values.username}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.username && Boolean(formik.errors.username)}\n          helperText={formik.touched.username && formik.errors.username}\n              \n            />\n          \n          \n          \n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n         \n          label=\"email\"\n          \n              value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n            />\n            \n          \n            <InputFormControl\n            variant=\"outlined\"\n            error={formik.touched.password && Boolean(formik.errors.password)}\n           \n            \n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput \n              id=\"outlined-adornment-password\"\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              label=\"Password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n\n              endAdornment={\n                <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n               }\n              />\n\n              <FormHelperText id=\"password\">\n                 {formik.touched.password && formik.errors.password}\n               </FormHelperText>\n              </InputFormControl> \n\n           \n          <Button  type=\"submit\" color=\"primary\"  variant=\"contained\" fullWidth>\n            Register\n          </Button>\n        </Formm>\n\n        <RegisterOrLoginBox>\n        Already have an account?   <RegisterOrLoginLink to=\"/login\">Log In</RegisterOrLoginLink>\n        \n        </RegisterOrLoginBox>\n      \n    </MainContainer>\n  );\n};\n\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <section>\n      \n        <title>Registration</title>\n      \n      <RegisterForm />\n    </section>\n  );\n}"],"names":["regExp","validationSchemaRegistation","yup","shape","username","min","matches","required","email","password","max","validationSchemaLogin","MainContainer","styled","Paper","_ref","theme","display","flexDirection","alignItems","maxWidth","margin","spacing","padding","TittleContainer","Box","_ref2","marginBottom","Title","_ref3","fontWeight","customFontWeight","extraLight","fontFamily","customFontFamily","authTittle","Formm","_ref4","Input","TextField","_ref5","width","InputFormControl","FormControl","_ref6","RegisterOrLoginBox","_ref7","textAlign","marginTop","RegisterOrLoginLink","Link","_ref8","color","customColors","authLink","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","register","name","sent","type","resetForm","stop","_x","apply","arguments","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","elevation","children","_jsx","autoComplete","handleSubmit","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormHelperText","Button","fullWidth","to","Register"],"sourceRoot":""}