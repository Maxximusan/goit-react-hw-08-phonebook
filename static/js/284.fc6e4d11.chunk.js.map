{"version":3,"file":"static/js/284.fc6e4d11.chunk.js","mappings":"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","sources":["helpers/yupSchema.js","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst regExp = {\n\n   name: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n   email: /^[ A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\s*?$/i,\n   password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n};\n\nexport const validationSchemaRegistation = yup.object().shape({\n  username: yup.string().min(3).matches(regExp.name, 'Name is not valid').required('Please Enter your name'),\n  email: yup.string().email().matches(regExp.email, 'Email is not valid').required('Please Enter your email'),\n  password: yup.string().min(6).max(16).matches(\n          regExp.password,\n          'Must Contain 6 Characters, One Uppercase, One Lowercase, One Number'\n        ).required('Please Enter your password'),\n});\n\nexport const validationSchemaLogin = yup.object().shape({\n  email: yup.string().email().matches(regExp.email, 'Email is not valid').required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n\n\n\n","// import styled from '@emotion/styled'\nimport { styled } from '@mui/material/styles';\nimport {TextField , FormControl, Box, Paper}from '@mui/material';\nimport { Link } from 'react-router-dom';\n\n\n\nexport const MainContainer = styled(Paper)(({ theme }) => ({\n\n    display: 'flex',\n    flexDirection: 'column',\n      alignItems: 'center',\n      width: '500px',\n\n      margin: theme.spacing(0, 'auto'),\n      padding: theme.spacing(8, 0),\n      \n    }))\n    \n    \n  \nexport const TittleContainer = styled(Box)(({ theme }) => ({\n   \n    marginBottom: theme.spacing(8),\n  }))\n \nexport const Title = styled('h2')(({ theme }) => ({\n   \n  fontWeight: theme.customFontWeight.extraLight,\n  fontFamily: theme.customFontFamily.authTittle,\n}))\n\n   \n  export const Formm = styled('form')(({ theme }) => ({\n   \n    width: '320px'\n  }))\n     \n \n \n export const Input = styled(TextField)(({ theme }) => ({\n   \n  width: '100%',\n  marginBottom: theme.spacing(7),\n}))\n    \n  \nexport const InputFormControl = styled(FormControl)(({ theme }) => ({\n   \n  width: '100%',\n  marginBottom: theme.spacing(7),\n}))\n \n    \n  \nexport const RegisterOrLoginBox = styled('p')(({ theme }) => ({\n   \n  textAlign: 'center',\n  marginTop: theme.spacing(8),\n}))\n\n\n\nexport const RegisterOrLoginLink = styled(Link)(({ theme }) => ({\n  color: theme.customColors.authLink\n \n}))\n","\nimport * as React from 'react';\n\nimport {InputAdornment, IconButton, InputLabel, OutlinedInput, FormHelperText} from '@mui/material';\nimport {Visibility, VisibilityOff}from '@mui/icons-material';\nimport Button from '@mui/material/Button';\n\n\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'Redux/auth/operations';\n\nimport { validationSchemaLogin  } from '../../helpers/yupSchema';\n\nimport {MainContainer , TittleContainer , Title, Formm, Input, InputFormControl, RegisterOrLoginBox, RegisterOrLoginLink } from 'components/LoginForm/LoginForm.styled'\n\n\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchemaLogin ,\n    onSubmit: async (values) => {\n      const res = await dispatch(logIn( {\n        email: values.email,\n        password: values.password,\n      }))\n      console.log(res);\n      console.log(values);\n\n      if (res.type === 'auth/login/fulfilled') {\n        formik.resetForm();\n      }\n      \n      // formik.resetForm();\n      \n    },\n  \n  });\n\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n\n  return (\n    <MainContainer elevation={1}>\n     \n      <TittleContainer>\n        <Title>Login to PHONEBOOK</Title>\n      </TittleContainer>\n\n      \n        <Formm autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n        <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n         \n          label=\"email\"\n             \n              value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n            />\n            \n          \n            <InputFormControl\n            variant=\"outlined\"\n            error={formik.touched.password && Boolean(formik.errors.password)}\n           \n            \n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput \n              id=\"outlined-adornment-password\"\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              label=\"Password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n\n              endAdornment={\n                <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n               }\n              />\n\n              <FormHelperText id=\"password\">\n                 {formik.touched.password && formik.errors.password}\n               </FormHelperText>\n              </InputFormControl> \n\n           \n          <Button  type=\"submit\" color=\"primary\"  variant=\"contained\" fullWidth>\n            Log In\n          </Button>\n        </Formm>\n      \n        <RegisterOrLoginBox>\n        Haven't had an account yet?   <RegisterOrLoginLink to=\"/register\">Register</RegisterOrLoginLink>\n        \n        </RegisterOrLoginBox>\n\n    </MainContainer>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <section>\n      \n        <title>Login</title>\n      \n      <LoginForm />\n    </section>\n  );\n}"],"names":["regExp","validationSchemaRegistation","yup","shape","username","min","matches","required","email","password","max","validationSchemaLogin","MainContainer","styled","Paper","_ref","theme","display","flexDirection","alignItems","width","margin","spacing","padding","TittleContainer","Box","_ref2","marginBottom","Title","_ref3","fontWeight","customFontWeight","extraLight","fontFamily","customFontFamily","authTittle","Formm","_ref4","Input","TextField","_ref5","InputFormControl","FormControl","_ref6","RegisterOrLoginBox","_ref7","textAlign","marginTop","RegisterOrLoginLink","Link","_ref8","color","customColors","authLink","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","res","wrap","_context","prev","next","logIn","sent","console","log","type","resetForm","stop","_x","apply","arguments","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","elevation","children","_jsx","autoComplete","handleSubmit","name","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormHelperText","Button","fullWidth","to","Login"],"sourceRoot":""}