{"version":3,"file":"static/js/355.44a05337.chunk.js","mappings":"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","sources":["Redux/contacts/selectors.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/UserContacts.module.css?c55e","pages/UserContacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","// import styled from '@emotion/styled'\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\n\nexport const Form = styled('form')(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '10px',\n  /* width: 507px; */\n  alignItems: 'center',\n  /* border: 1px solid; */\n  border: 'none'\n}))\n\nexport const Field = styled('label')(({ theme }) => ({\n     marginBottom: '20px',\n  display: 'flex',\n  flexDirection: 'column',\n\n}))\n\nexport const Input = styled('input')(({ theme }) => ({\n     width: '350px',\n     borderRadius: theme.customBorderRadius.standart,\n  borderColor: 'rgb(0 0 0 / 0%)',\n  outline: 'none',\n  backgroundColor: theme.customColors.addContactsBackground,\n}))\n\nexport const Baton = styled(Button)(({ theme }) => ({\n   color: theme.customColors.test,\n   backgroundColor: theme.customColors.testBackground,\n   borderRadius: theme.customBorderRadius.secondary,\n\n   '&:hover': {\n    backgroundColor: theme.customColors.testHover,\n    \n  },\n\n}))\n\n\n","import {useState} from 'react'\nimport { nanoid } from 'nanoid';\n// import Button from '@mui/material/Button';\n\n\n\n// import css from 'components/Form/Form.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../Redux/contacts/selectors'\nimport { addContact } from '../../Redux/contacts/operations'\nimport { Form, Field, Input, Baton} from 'components/Form/Form.styled'\n\nexport const AddContacts = () => {\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts)\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n    const inputChange = (event) => {\n    const { name, value } = event.target;\n  \n       switch (name) {\n         case 'name':\n           setName(value);\n           break;\n         \n         case 'number':\n           setNumber(value);\n           break;\n         \n         default:\n           return;\n       }\n    \n  }\n\n  const clearForm = () => {\n    setName('');\n    setNumber('')\n   \n    };\n\n \n  \n    const addContacts = ({ name, number }) => {\n    \n    const newContact = { id: nanoid(), name, number };\n    const checkUser = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    checkUser\n      ? alert(`${name} is already in the contacts`)\n      : dispatch(addContact(newContact));\n  };\n  \n  \n  const formSubmit = (event) => {\n    event.preventDefault();\n\n    addContacts({ name, number })\n    \n    clearForm()\n  }\n    \n    const nameInputId = nanoid();\n   const  telInputId = nanoid()\n    \n \n  \n        return (\n            <Form onSubmit={formSubmit} >\n          <Field htmlFor={nameInputId} >\n            Name:\n             <Input\n              id={nameInputId}     \n              // label='FUCK'\n              value={name}\n              onChange={inputChange}\n              name=\"name\"\n              type=\"text\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              \n            />\n          </Field>\n          <Field htmlFor={telInputId} >\n            Number:\n            <Input\n              id={telInputId}  \n             \n              value={number}\n              onChange={inputChange}\n              name=\"number\"\n              type=\"tel\"\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </Field>\n\n          {/* <Button  type=\"submit\" color='success' variant=\"contained\" size=\"small\" >Add contact!</Button> */}\n          <Baton>Add contact</Baton>\n        </Form>\n        )\n   \n}","import styled from '@emotion/styled'\n\nexport const List = styled.ol`\n    padding-left: 30px;\n`\n\nexport const Item = styled.li`\n     padding: 4px;\n`\n\nexport const ItemContainer = styled.div`\n     display: flex;\n  justify-content: space-between;\n  align-items: center\n`\n\nexport const ItemName = styled.span`\n    color: rgb(27, 27, 87);\n  font-family: 'Fira sans', sans-serif;\n`\n\nexport const ItemNumber = styled.span`\n   color: rgb(90, 42, 221);\n  font-family: 'Menlo, monospace';\n`\n\nexport const ItemButton = styled.button`\n   border-radius: 1em;\n  border-color: tomato;\n  &:hover,\n  &:focus {\n    background: rgb(255, 59, 59);\n  \n  border-color: rgba(255, 59, 59, 0.884);\n  }\n`","import PropTypes from \"prop-types\";\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n// import css from 'components/Contacts/Contacts.module.css'\nimport { getContacts, getFilter } from '../../Redux/contacts/selectors'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../Redux/contacts/operations'\nimport * as SC from 'components/Contacts/Contacts.styled'\n\n\n\n\nexport const ContactList = () => {\n const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n \n  const filter = useSelector(getFilter);\n\n  \n        const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  \n\n\n \n\n  return (\n    <SC.List >\n      {visibleContacts.map(({ id, name, number }) => (\n        <SC.Item key={id} >\n          <SC.ItemContainer >\n            <p>\n            <SC.ItemName >{name}: </SC.ItemName>\n              <SC.ItemNumber >{number}</SC.ItemNumber>\n              </p>\n          <Button  type=\"submit\" color=\"error\" variant=\"outlined\" size=\"small\" startIcon={<DeleteIcon />} onClick={() => dispatch(deleteContact(id))}>\n            Delete\n            </Button>\n            </SC.ItemContainer>\n        </SC.Item>\n      ))}\n    </SC.List>\n  );\n};\n\n\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  \n};","import styled from '@emotion/styled'\n\nexport const Field = styled.label`\n    display: flex;\n  flex-direction: column;\n  padding: 10px;\n  /* width: 300px; */\n`\n\nexport const Input = styled.input`\n  width: 350px;\n  border-radius: 4px;\n  border-color: rgba(0, 0, 0, 0);\n  outline: none;\n`","import { Box } from '@mui/material';\n\n// import css from 'components/Filter/Filter.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChange } from '../../Redux/contacts/slice'\nimport { getFilter } from '../../Redux/contacts/selectors'\nimport { Field, Input} from 'components/Filter/Filter.styled'\n \n  \nexport const Filter = () => {\nconst dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n    return (\n    <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n     \n      \n    }}>\n      <Field >\n        Find contact by Name\n        <Input\n          \n            type=\"text\"\n          value={filter}\n          onChange={event => dispatch(filterChange(event.target.value))}\n        />\n            </Field>\n     </Box>\n  );\n}\n\n\n\n","import { MagnifyingGlass } from 'react-loader-spinner'\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"sectionsContainer\":\"UserContacts_sectionsContainer__70QLq\",\"addList\":\"UserContacts_addList__+xnYy\",\"contactsList\":\"UserContacts_contactsList__EUytP\",\"title\":\"UserContacts_title__NQWSQ\"};","\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { AddContacts } from 'components/Form/Form'\nimport { ContactList } from 'components/Contacts/Contacts'\nimport { Filter } from 'components/Filter/Filter'\nimport { getIsLoading, getError } from '../Redux/contacts/selectors'\nimport { fetchContacts } from 'Redux/contacts/operations'\nimport { Loader } from '../components/Loader/Loader'\nimport css from 'pages/UserContacts.module.css'\n\n\nexport default function UserContacts() {\n    const dispatch = useDispatch();                                      \n  const isloading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  },[dispatch])\n\n    return (\n          <div className={css.sectionsContainer}>\n           <section className={css.addList}>\n             <h2 className={css.title}>Add Contact</h2>\n            <AddContacts  />\n           </section>\n          <section className={css.contactsList}>\n             <h2 className={css.title}>Contacts</h2>\n             <Filter />\n             {isloading && !error && <Loader />}\n             <ContactList />\n           </section>\n         </div>\n  );\n}"],"names":["getContacts","state","contacts","getFilter","filter","getIsLoading","isLoading","getError","error","Form","styled","_ref","theme","display","flexDirection","padding","alignItems","border","Field","_ref2","marginBottom","Input","_ref3","width","borderRadius","customBorderRadius","standart","borderColor","outline","backgroundColor","customColors","addContactsBackground","Baton","Button","_ref4","color","test","testBackground","secondary","testHover","AddContacts","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","inputChange","event","_event$target","target","value","nameInputId","nanoid","telInputId","_jsxs","onSubmit","preventDefault","newContact","id","find","contact","alert","concat","addContact","addContacts","children","htmlFor","_jsx","onChange","type","required","List","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","ItemContainer","_templateObject3","ItemName","_templateObject4","ItemNumber","_templateObject5","ContactList","_templateObject6","normalizedFilter","toLowerCase","visibleContacts","includes","SC","map","variant","size","startIcon","DeleteIcon","onClick","deleteContact","Filter","Box","sx","justifyContent","filterChange","Loader","MagnifyingGlass","visible","height","ariaLabel","wrapperStyle","wrapperClass","glassColor","UserContacts","isloading","useEffect","fetchContacts","className","css"],"sourceRoot":""}