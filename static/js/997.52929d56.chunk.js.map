{"version":3,"file":"static/js/997.52929d56.chunk.js","mappings":"0PACA,EAAuB,mBAAvB,EAAwD,0BAAxD,EAAgG,0BCDnFA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAS,EAC/CC,EAAY,SAAAF,GAAK,OAAIA,EAAMG,MAAO,EAClCC,EAAe,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAAU,EACjDC,EAAW,SAAAN,GAAK,OAAIA,EAAMC,SAASM,KAAM,E,mBCMzCC,EAAO,WAElB,IAAMC,GAAWC,EAAAA,EAAAA,MACXT,GAAWU,EAAAA,EAAAA,IAAYZ,GAE7Ba,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAGhBG,EAAc,SAACC,GACrB,IAAAC,EAAwBD,EAAME,OAAtBT,EAAIQ,EAAJR,KAAMU,EAAKF,EAALE,MAEX,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MAEF,IAAK,SACHL,EAAUK,GACV,MAEF,QACE,OAGT,EA+BQC,GAAcC,EAAAA,EAAAA,MACdC,GAAaD,EAAAA,EAAAA,MAIf,OACIE,EAAAA,EAAAA,MAAA,QAAMC,SAdG,SAACR,GAClBA,EAAMS,iBAdc,SAAHC,GAA0B,IAApBjB,EAAIiB,EAAJjB,KAAMI,EAAMa,EAANb,OAEvBc,EAAa,CAAEC,IAAIP,EAAAA,EAAAA,MAAUZ,KAAAA,EAAMI,OAAAA,GACvBnB,EAASmC,MACzB,SAACC,GAAO,OAAKA,EAAQrB,OAASkB,EAAWlB,IAAI,IAI3CsB,MAAM,GAADC,OAAIvB,EAAI,gCACbP,GAAS+B,EAAAA,EAAAA,IAAWN,GAC1B,CAMEO,CAAY,CAAEzB,KAAAA,EAAMI,OAAAA,IAvBpBH,EAAQ,IACRI,EAAU,GAyBZ,EAQsCqB,UAAWC,EAASC,SAAA,EAClDd,EAAAA,EAAAA,MAAA,SAAOe,QAASlB,EAAae,UAAWC,EAAgBC,SAAA,CAAC,SAEtDE,EAAAA,EAAAA,KAAA,SACCX,GAAIR,EACJe,UAAWC,EACXjB,MAAOV,EACP+B,SAAUzB,EACVN,KAAK,OACLgC,KAAK,OACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZrB,EAAAA,EAAAA,MAAA,SAAOe,QAAShB,EAAYa,UAAWC,EAAgBC,SAAA,CAAC,WAEtDE,EAAAA,EAAAA,KAAA,SACEX,GAAIN,EACJa,UAAWC,EACXjB,MAAON,EACP2B,SAAUzB,EACVN,KAAK,SACLgC,KAAK,MACLC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAIZL,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAEJ,KAAK,SAASK,MAAM,UAAUC,QAAQ,WAAWC,KAAK,QAAOX,SAAC,mBAIjF,E,mBCxGaY,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mCAIhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8BAIhBG,EAAgBL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kEAK1BK,EAAWP,EAAAA,EAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gFAKtBO,EAAaT,EAAAA,EAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2ECRxBS,GDaaX,EAAAA,EAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2KCbZ,WAC1B,IAAMlD,GAAWC,EAAAA,EAAAA,MACVT,GAAWU,EAAAA,EAAAA,IAAYZ,GAKjBuE,GAHG3D,EAAAA,EAAAA,IAAYT,GAGWqE,cAC9BC,EAAkBvE,EAASE,QAAO,SAACkC,GAAO,OAC9CA,EAAQrB,KAAKuD,cAAcE,SAASH,EAAiB,IAMzD,OACExB,EAAAA,EAAAA,KAAC4B,EAAO,CAAA9B,SACL4B,EAAgBG,KAAI,SAAA1C,GAAA,IAAGE,EAAEF,EAAFE,GAAInB,EAAIiB,EAAJjB,KAAMI,EAAMa,EAANb,OAAM,OACtC0B,EAAAA,EAAAA,KAAC4B,EAAO,CAAA9B,UACNd,EAAAA,EAAAA,MAAC4C,EAAgB,CAAA9B,SAAA,EACfd,EAAAA,EAAAA,MAAA,KAAAc,SAAA,EACAd,EAAAA,EAAAA,MAAC4C,EAAW,CAAA9B,SAAA,CAAG5B,EAAK,SAClB8B,EAAAA,EAAAA,KAAC4B,EAAa,CAAA9B,SAAGxB,QAErB0B,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAAEJ,KAAK,SAASK,MAAM,QAAQC,QAAQ,WAAWC,KAAK,QAAQqB,QAAS,kBAAMnE,GAASoE,EAAAA,EAAAA,IAAc1C,GAAI,EAACS,SAAC,eANrGT,EAUJ,KAIlB,G,mBC1Ca2C,EAAQrB,EAAAA,EAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kGAOpBoB,EAAQtB,EAAAA,EAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uGCApBqB,EAAS,WACtB,IAAMvE,GAAWC,EAAAA,EAAAA,MACTP,GAASQ,EAAAA,EAAAA,IAAYT,GAEzB,OACA4C,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,OACTC,eAAgB,UAGhBxC,UACAd,EAAAA,EAAAA,MAACgD,EAAK,CAAAlC,SAAA,CAAE,wBAENE,EAAAA,EAAAA,KAACiC,EAAK,CAEF/B,KAAK,OACPtB,MAAOvB,EACP4C,SAAU,SAAAxB,GAAK,OAAId,GAAS4E,EAAAA,EAAAA,IAAa9D,EAAME,OAAOC,OAAO,QAKvE,E,UC7Ba4D,EAAS,WAClB,OACIxC,EAAAA,EAAAA,KAACyC,EAAAA,GAAe,CACtBC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAa,UACbzC,MAAQ,WAGV,ECdA,EAAoC,wCAApC,EAAsF,8BAAtF,EAAmI,mCAAnI,EAA8K,4BCY/J,SAAS0C,IACpB,IAAMtF,GAAWC,EAAAA,EAAAA,MACbsF,GAAYrF,EAAAA,EAAAA,IAAYP,GACxBG,GAAQI,EAAAA,EAAAA,IAAYL,GAMxB,OAJF2F,EAAAA,EAAAA,YAAU,WACRxF,GAASyF,EAAAA,EAAAA,MACX,GAAE,CAACzF,KAGKqB,EAAAA,EAAAA,MAAA,OAAKY,UAAWC,EAAsBC,SAAA,EACrCd,EAAAA,EAAAA,MAAA,WAASY,UAAWC,EAAYC,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAUC,SAAC,iBAC3BE,EAAAA,EAAAA,KAACtC,EAAI,QAEPsB,EAAAA,EAAAA,MAAA,WAASY,UAAWC,EAAiBC,SAAA,EAClCE,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAUC,SAAC,cAC1BE,EAAAA,EAAAA,KAACkC,EAAM,IACNgB,IAAczF,IAASuC,EAAAA,EAAAA,KAACwC,EAAM,KAC/BxC,EAAAA,EAAAA,KAACsB,EAAW,SAIzB,C","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","Redux/contacts/selectors.js","components/Form/Form.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/UserContacts.module.css?c55e","pages/UserContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"form__field\":\"Form_form__field__7K6Cd\",\"form__input\":\"Form_form__input__qyBih\",\"form__btn\":\"Form_form__btn__sPTnm\"};","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import {useState} from 'react'\nimport { nanoid } from 'nanoid';\nimport Button from '@mui/material/Button';\n\nimport css from 'components/Form/Form.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../Redux/contacts/selectors'\nimport { addContact } from '../../Redux/contacts/operations'\n\nexport const Form = () => {\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts)\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n    const inputChange = (event) => {\n    const { name, value } = event.target;\n  \n       switch (name) {\n         case 'name':\n           setName(value);\n           break;\n         \n         case 'number':\n           setNumber(value);\n           break;\n         \n         default:\n           return;\n       }\n    \n  }\n\n  const clearForm = () => {\n    setName('');\n    setNumber('')\n   \n    };\n\n \n  \n    const addContacts = ({ name, number }) => {\n    \n    const newContact = { id: nanoid(), name, number };\n    const checkUser = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    checkUser\n      ? alert(`${name} is already in the contacts`)\n      : dispatch(addContact(newContact));\n  };\n  \n  \n  const formSubmit = (event) => {\n    event.preventDefault();\n\n    addContacts({ name, number })\n    \n    clearForm()\n  }\n    \n    const nameInputId = nanoid();\n   const  telInputId = nanoid()\n    \n \n  \n        return (\n            <form onSubmit={formSubmit} className={css.form}>\n          <label htmlFor={nameInputId} className={css.form__field}>\n            Name:\n             <input\n              id={nameInputId}     \n              className={css.form__input}\n              value={name}\n              onChange={inputChange}\n              name=\"name\"\n              type=\"text\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              \n            />\n          </label>\n          <label htmlFor={telInputId} className={css.form__field}>\n            Number:\n            <input\n              id={telInputId}  \n              className={css.form__input} \n              value={number}\n              onChange={inputChange}\n              name=\"number\"\n              type=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <Button  type=\"submit\" color=\"success\" variant=\"outlined\" size=\"small\">Add contact!</Button>\n        </form>\n        )\n   \n}","import styled from '@emotion/styled'\n\nexport const List = styled.ol`\n    padding-left: 30px;\n`\n\nexport const Item = styled.li`\n     padding: 4px;\n`\n\nexport const ItemContainer = styled.div`\n     display: flex;\n  justify-content: space-between;\n`\n\nexport const ItemName = styled.span`\n    color: rgb(27, 27, 87);\n  font-family: 'Fira sans', sans-serif;\n`\n\nexport const ItemNumber = styled.span`\n   color: rgb(90, 42, 221);\n  font-family: 'Menlo, monospace';\n`\n\nexport const ItemButton = styled.button`\n   border-radius: 1em;\n  border-color: tomato;\n  &:hover,\n  &:focus {\n    background: rgb(255, 59, 59);\n  \n  border-color: rgba(255, 59, 59, 0.884);\n  }\n`","import PropTypes from \"prop-types\";\nimport Button from '@mui/material/Button';\n\n// import css from 'components/Contacts/Contacts.module.css'\nimport { getContacts, getFilter } from '../../Redux/contacts/selectors'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../Redux/contacts/operations'\nimport * as SC from 'components/Contacts/Contacts.styled'\n\n\n\n\nexport const ContactList = () => {\n const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n \n  const filter = useSelector(getFilter);\n\n  \n        const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  \n\n\n \n\n  return (\n    <SC.List >\n      {visibleContacts.map(({ id, name, number }) => (\n        <SC.Item key={id} >\n          <SC.ItemContainer >\n            <p>\n            <SC.ItemName >{name}: </SC.ItemName>\n              <SC.ItemNumber >{number}</SC.ItemNumber>\n              </p>\n          <Button  type=\"submit\" color=\"error\" variant=\"outlined\" size=\"small\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n            </Button>\n            </SC.ItemContainer>\n        </SC.Item>\n      ))}\n    </SC.List>\n  );\n};\n\n\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  \n};","import styled from '@emotion/styled'\n\nexport const Field = styled.label`\n    display: flex;\n  flex-direction: column;\n  padding: 10px;\n  /* width: 300px; */\n`\n\nexport const Input = styled.input`\n  width: 350px;\n  border-radius: 4px;\n  border-color: rgba(0, 0, 0, 0);\n  outline: none;\n`","import { Box } from '@mui/material';\n\n// import css from 'components/Filter/Filter.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChange } from '../../Redux/contacts/slice'\nimport { getFilter } from '../../Redux/contacts/selectors'\nimport { Field, Input} from 'components/Filter/Filter.styled'\n \n  \nexport const Filter = () => {\nconst dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n    return (\n    <Box sx={{\n      display: 'flex',\n      justifyContent: 'center',\n     \n      \n    }}>\n      <Field >\n        Find contact by Name\n        <Input\n          \n            type=\"text\"\n          value={filter}\n          onChange={event => dispatch(filterChange(event.target.value))}\n        />\n            </Field>\n     </Box>\n  );\n}\n\n\n\n","import { MagnifyingGlass } from 'react-loader-spinner'\n\nexport const Loader = () => {\n    return (\n        <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = '#c0efff'\n  color = '#e15b64'\n/>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"sectionsContainer\":\"UserContacts_sectionsContainer__70QLq\",\"addList\":\"UserContacts_addList__+xnYy\",\"contactsList\":\"UserContacts_contactsList__EUytP\",\"title\":\"UserContacts_title__NQWSQ\"};","\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { Form } from 'components/Form/Form'\nimport { ContactList } from 'components/Contacts/Contacts'\nimport { Filter } from 'components/Filter/Filter'\nimport { getIsLoading, getError } from '../Redux/contacts/selectors'\nimport { fetchContacts } from 'Redux/contacts/operations'\nimport { Loader } from '../components/Loader/Loader'\nimport css from 'pages/UserContacts.module.css'\n\n\nexport default function UserContacts() {\n    const dispatch = useDispatch();                                      \n  const isloading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  },[dispatch])\n\n    return (\n          <div className={css.sectionsContainer}>\n           <section className={css.addList}>\n             <h2 className={css.title}>Add Contact</h2>\n            <Form  />\n           </section>\n          <section className={css.contactsList}>\n             <h2 className={css.title}>Contacts</h2>\n             <Filter />\n             {isloading && !error && <Loader />}\n             <ContactList />\n           </section>\n         </div>\n  );\n}"],"names":["getContacts","state","contacts","getFilter","filter","getIsLoading","isLoading","getError","error","Form","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","inputChange","event","_event$target","target","value","nameInputId","nanoid","telInputId","_jsxs","onSubmit","preventDefault","_ref","newContact","id","find","contact","alert","concat","addContact","addContacts","className","css","children","htmlFor","_jsx","onChange","type","pattern","title","required","Button","color","variant","size","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","ItemContainer","_templateObject3","ItemName","_templateObject4","ItemNumber","_templateObject5","ContactList","_templateObject6","normalizedFilter","toLowerCase","visibleContacts","includes","SC","map","onClick","deleteContact","Field","Input","Filter","Box","sx","display","justifyContent","filterChange","Loader","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","UserContacts","isloading","useEffect","fetchContacts"],"sourceRoot":""}