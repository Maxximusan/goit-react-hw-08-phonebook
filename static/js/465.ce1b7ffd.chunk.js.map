{"version":3,"file":"static/js/465.ce1b7ffd.chunk.js","mappings":"kNAGaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yBAItBC,EAAY,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAC1B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXF,KAAMA,EACNG,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAACP,EAAS,CAAAW,SAAED,GAAoB,GAGzD,C,4FCZaE,EAA8BC,EAAAA,KAAaC,MAAM,CAC5DC,SAAUF,EAAAA,KAAaG,IAAI,GAAGC,SAAS,0BACvCC,MAAOL,EAAAA,KAAaK,QAAQD,SAAS,2BACrCE,SAAUN,EAAAA,KAAaG,IAAI,GAAGI,IAAI,IAAIH,SAAS,gCAGpCI,EAAwBR,EAAAA,KAAaC,MAAM,CACtDI,MAAOL,EAAAA,KAAaK,QAAQD,SAAS,2BACrCE,SAAUN,EAAAA,KAAaG,IAAI,GAAGI,IAAI,IAAIH,SAAS,+B,sGCTjD,EAAgC,iCAAhC,EAAkF,kCAAlF,EAA4H,yBAA5H,EAA4J,wBAA5J,EAA4L,yBAA5L,EAA8N,0B,4BCOxNK,EAAe,CACnBJ,MAAO,GACPC,SAAU,IAGCI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBjB,SAAA,EAChCJ,EAAAA,EAAAA,KAAA,OAAKoB,UAAWC,EAAmBjB,UACjCJ,EAAAA,EAAAA,KAAA,MAAIoB,UAAWC,EAAUjB,SAAC,0BAE5BJ,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CACLC,cAAeR,EACfS,SAnBe,SAAH1B,EAAA2B,GAA4C,IAAtCd,EAAKb,EAALa,MAAOC,EAAQd,EAARc,SAAcc,EAASD,EAATC,UAG3CT,GACEU,EAAAA,EAAAA,IAAM,CACJhB,MAAOA,EACPC,SAAUA,KAGdc,GACF,EAUME,iBAAkBd,EAAAA,EAAsBV,UAExCe,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACT,UAAWC,EAAUS,aAAa,MAAK1B,SAAA,EAC3Ce,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUjB,SAAA,CAAC,SAE3BJ,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CAACC,KAAK,QAAQjC,KAAK,QAAQW,UAAQ,KACzCV,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,KAAK,cAElBoB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUjB,SAAA,CAAC,YAE3BJ,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CAACC,KAAK,WAAWjC,KAAK,WAAWW,UAAQ,KAC/CV,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,KAAK,iBAElBC,EAAAA,EAAAA,KAAA,UAAQoB,UAAWC,EAAYW,KAAK,SAAQ5B,SAAC,kBAOvD,ECrDe,SAAS6B,IACtB,OACEd,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EAEIJ,EAAAA,EAAAA,KAAA,SAAAI,SAAO,WAETJ,EAAAA,EAAAA,KAACgB,EAAS,MAGhB,C","sources":["helpers/formError.js","helpers/yupSchema.js","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  color: red;\n`;\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import * as yup from 'yup';\n\nexport const validationSchemaRegistation = yup.object().shape({\n  username: yup.string().min(3).required('Please Enter your name'),\n  email: yup.string().email().required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n\nexport const validationSchemaLogin = yup.object().shape({\n  email: yup.string().email().required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n//   name: yup\n//     .string()\n//     .min(3)\n//     .matches(regExp.name, 'Name is not valid')\n//     .required('Please Enter your name'),\n//   email: yup\n//     .string()\n//     .matches(regExp.email, 'Email is not valid')\n//     .required('Please Enter your email'),\n//   password: yup\n//     .string()\n//     .required('Please Enter your password')\n//     .matches(\n//       regExp.password,\n//       'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number'\n//     ),\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"LoginForm_mainContainer__hdNC3\",\"titleContainer\":\"LoginForm_titleContainer__OK39B\",\"title\":\"LoginForm_title__5FilZ\",\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"button\":\"LoginForm_button__LodJg\"};","import { Formik, Form, Field } from 'formik';\n\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'Redux/auth/operations';\nimport css from './LoginForm.module.css';\nimport { validationSchemaLogin } from '../../helpers/yupSchema';\nimport { FormError } from 'helpers/formError';\n\nconst initialValue = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    // e.preventDefault();\n    // const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <div className={css.mainContainer}>\n      <div className={css.titleContainer}>\n        <h2 className={css.title}>Login to PHONEBOOK</h2>\n      </div>\n      <Formik\n        initialValues={initialValue}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchemaLogin}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.label}>\n            Email\n            <Field type=\"email\" name=\"email\" required />\n            <FormError name=\"email\" />\n          </label>\n          <label className={css.label}>\n            Password\n            <Field type=\"password\" name=\"password\" required />\n            <FormError name=\"password\" />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Log In\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      \n        <title>Login</title>\n      \n      <LoginForm />\n    </div>\n  );\n}"],"names":["ErrorText","styled","_templateObject","_taggedTemplateLiteral","FormError","_ref","name","_jsx","ErrorMessage","render","message","children","validationSchemaRegistation","yup","shape","username","min","required","email","password","max","validationSchemaLogin","initialValue","LoginForm","dispatch","useDispatch","_jsxs","className","css","Formik","initialValues","onSubmit","_ref2","resetForm","logIn","validationSchema","Form","autoComplete","Field","type","Login"],"sourceRoot":""}