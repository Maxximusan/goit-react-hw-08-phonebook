{"version":3,"file":"static/js/26.e0f8ccb0.chunk.js","mappings":"iNAGaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yBAItBC,EAAY,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAC1B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXF,KAAMA,EACNG,OAAQ,SAAAC,GAAO,OAAIH,EAAAA,EAAAA,KAACP,EAAS,CAAAW,SAAED,GAAoB,GAGzD,C,4FCZaE,EAA8BC,EAAAA,KAAaC,MAAM,CAC5DC,SAAUF,EAAAA,KAAaG,IAAI,GAAGC,SAAS,0BACvCC,MAAOL,EAAAA,KAAaK,QAAQD,SAAS,2BACrCE,SAAUN,EAAAA,KAAaG,IAAI,GAAGI,IAAI,IAAIH,SAAS,gCAGpCI,EAAwBR,EAAAA,KAAaC,MAAM,CACtDI,MAAOL,EAAAA,KAAaK,QAAQD,SAAS,2BACrCE,SAAUN,EAAAA,KAAaG,IAAI,GAAGI,IAAI,IAAIH,SAAS,+B,sGCTjD,EAAgC,oCAAhC,EAAqF,qCAArF,EAAkI,4BAAlI,EAAqK,2BAArK,EAAwM,4BAAxM,EAA6O,6B,4BCMvOK,EAAgB,CACpBP,SAAU,GACVG,MAAO,GACPC,SAAU,IAGCI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAmBjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBjB,SAAA,EAChCJ,EAAAA,EAAAA,KAAA,OAAKoB,UAAWC,EAAmBjB,UACjCJ,EAAAA,EAAAA,KAAA,MAAIoB,UAAWC,EAAUjB,SAAC,kCAE5BJ,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CACLP,cAAeA,EACfQ,SAxBe,SAACC,EAAQC,GAG5BC,QAAQC,IAAIH,EAAOZ,UACnBc,QAAQC,IAAIH,EAAOhB,UACnBkB,QAAQC,IAAIH,EAAOb,OACnBe,QAAQC,IAAIF,GACZR,GACEW,EAAAA,EAAAA,IAAS,CACP7B,KAAMyB,EAAOhB,SACbG,MAAOa,EAAOb,MACdC,SAAUY,EAAOZ,YAGrBa,EAAQI,WACV,EAUMC,iBAAkBzB,EAAAA,EAA4BD,UAE9Ce,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACX,UAAWC,EAAUW,aAAa,MAAK5B,SAAA,EAC3Ce,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUjB,SAAA,CAAC,YAE3BJ,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CACJC,KAAK,OACLnC,KAAK,cAKPC,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,KAAK,iBAElBoB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUjB,SAAA,CAAC,SAE3BJ,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CACJC,KAAK,QACLnC,KAAK,WAIPC,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,KAAK,cAElBoB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUjB,SAAA,CAAC,YAE3BJ,EAAAA,EAAAA,KAACiC,EAAAA,GAAK,CACJC,KAAK,WACLnC,KAAK,cAIPC,EAAAA,EAAAA,KAACH,EAAAA,EAAS,CAACE,KAAK,iBAElBC,EAAAA,EAAAA,KAAA,UAAQoB,UAAWC,EAAYa,KAAK,SAAQ9B,SAAC,oBAOvD,EC/Ee,SAAS+B,IACtB,OACEhB,EAAAA,EAAAA,MAAA,OAAAf,SAAA,EAEIJ,EAAAA,EAAAA,KAAA,SAAAI,SAAO,kBAETJ,EAAAA,EAAAA,KAACgB,EAAY,MAGnB,C","sources":["helpers/formError.js","helpers/yupSchema.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  color: red;\n`;\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n","import * as yup from 'yup';\n\nexport const validationSchemaRegistation = yup.object().shape({\n  username: yup.string().min(3).required('Please Enter your name'),\n  email: yup.string().email().required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n\nexport const validationSchemaLogin = yup.object().shape({\n  email: yup.string().email().required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n//   name: yup\n//     .string()\n//     .min(3)\n//     .matches(regExp.name, 'Name is not valid')\n//     .required('Please Enter your name'),\n//   email: yup\n//     .string()\n//     .matches(regExp.email, 'Email is not valid')\n//     .required('Please Enter your email'),\n//   password: yup\n//     .string()\n//     .required('Please Enter your password')\n//     .matches(\n//       regExp.password,\n//       'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number'\n//     ),\n","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"RegisterForm_mainContainer__4GfKf\",\"titleContainer\":\"RegisterForm_titleContainer__S9kDo\",\"title\":\"RegisterForm_title__EvDyW\",\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"button\":\"RegisterForm_button__B3hFq\"};","import { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/auth/operations';\nimport css from './RegisterForm.module.css';\nimport { validationSchemaRegistation } from '../../helpers/yupSchema';\nimport { FormError } from 'helpers/formError';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    // e.preventDefault();\n\n    console.log(values.password);\n    console.log(values.username);\n    console.log(values.email);\n    console.log(actions);\n    dispatch(\n      register({\n        name: values.username,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <div className={css.mainContainer}>\n      <div className={css.titleContainer}>\n        <h2 className={css.title}>Create a PHONEBOOK account</h2>\n      </div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchemaRegistation}\n      >\n        <Form className={css.form} autoComplete=\"off\">\n          <label className={css.label}>\n            Username\n            <Field\n              type=\"text\"\n              name=\"username\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n            />\n            <FormError name=\"username\" />\n          </label>\n          <label className={css.label}>\n            Email\n            <Field\n              type=\"email\"\n              name=\"email\"\n              // pattern=\"/^[ A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\s*?$/i\"\n              // required\n            />\n            <FormError name=\"email\" />\n          </label>\n          <label className={css.label}>\n            Password\n            <Field\n              type=\"password\"\n              name=\"password\"\n              // pattern=\"/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/\"\n              // required\n            />\n            <FormError name=\"password\" />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Register\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      \n        <title>Registration</title>\n      \n      <RegisterForm />\n    </div>\n  );\n}"],"names":["ErrorText","styled","_templateObject","_taggedTemplateLiteral","FormError","_ref","name","_jsx","ErrorMessage","render","message","children","validationSchemaRegistation","yup","shape","username","min","required","email","password","max","validationSchemaLogin","initialValues","RegisterForm","dispatch","useDispatch","_jsxs","className","css","Formik","onSubmit","values","actions","console","log","register","resetForm","validationSchema","Form","autoComplete","Field","type","Register"],"sourceRoot":""}