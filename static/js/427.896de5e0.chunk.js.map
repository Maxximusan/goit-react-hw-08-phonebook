{"version":3,"file":"static/js/427.896de5e0.chunk.js","mappings":"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","sources":["helpers/yupSchema.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const validationSchemaRegistation = yup.object().shape({\n  username: yup.string().min(3).required('Please Enter your name'),\n  email: yup.string().email().required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n\nexport const validationSchemaLogin = yup.object().shape({\n  email: yup.string().email().required('Please Enter your email'),\n  password: yup.string().min(6).max(16).required('Please Enter your password'),\n});\n//   name: yup\n//     .string()\n//     .min(3)\n//     .matches(regExp.name, 'Name is not valid')\n//     .required('Please Enter your name'),\n//   email: yup\n//     .string()\n//     .matches(regExp.email, 'Email is not valid')\n//     .required('Please Enter your email'),\n//   password: yup\n//     .string()\n//     .required('Please Enter your password')\n//     .matches(\n//       regExp.password,\n//       'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number'\n//     ),\n\n\n\n// const regExp = {\n\n   // name: ^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$,\n   // email: /^[ A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\s*?$/i,\n   // password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n// };\n\n// export default regExp;\n\n\n","import styled from '@emotion/styled'\nimport {TextField , FormControl, Box, Paper}from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const MainContainer = styled(Paper)`\n     display: flex;\n    align-items: center;\n    flex-direction: column;\n    width: 500px;\n    margin: 0 auto;\n    padding: 30px 0;\n`\nexport const TittleContainer = styled(Box)`\n    /* display: flex;\n    justify-content: center;\n    flex-direction: column; */\n    \n    margin-bottom: 30px;\n`\n \nexport const Title = styled.h2`\n    font-weight: 200;\n    font-family: Helvetica Neue, san-serif;\n`\n  export const Formm = styled.form`\n     width: 320px;\n  `\n \n export const Input = styled(TextField)`\n     /* display: flex;\n    flex-direction: column; */\n    width: 100%;\n    margin-bottom: 26px;\n `\n  export const InputFormControl = styled(FormControl)`\n    width: 100%;\n    margin-bottom: 26px;\n  `\n\n\n//   export const Buttonn = styled.button`\n//     width: 320px;\n//     padding: 3px;\n//     border-radius: 1em;\n//     border-color: green;\n//     &:hover,\n//     &:focus {\n//         background: rgb(46, 138, 34);\n//         /* background: aqua; */\n//     /* border: none; */\n//     /* border-color: rgb(82, 255, 59); */\n//     }\n//   `\n  \n  \n  \nexport const RegisterOrLoginBox = styled.p`\nmargin-top: 30px;\ntext-align: center;\n`;\n\nexport const RegisterOrLoginLink = styled(Link)`\ncolor: #1976d2;\n`;","import * as React from 'react';\n\nimport {InputAdornment, IconButton, InputLabel, OutlinedInput, FormHelperText} from '@mui/material';\nimport {Visibility, VisibilityOff}from '@mui/icons-material';\nimport Button from '@mui/material/Button';\n\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'Redux/auth/operations';\n\nimport { validationSchemaRegistation } from '../../helpers/yupSchema';\n\nimport {MainContainer , TittleContainer , Title, Formm, Input, InputFormControl, RegisterOrLoginBox, RegisterOrLoginLink } from 'components/RegisterForm/RegisterForm.styled'\n\n\n\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchemaRegistation,\n    onSubmit: async (values) => {\n      const res = await dispatch(register( {\n        name: values.username,\n        email: values.email,\n        password: values.password,\n      }))\n      console.log(res);\n      console.log(values);\n\n      if (res.type === 'auth/register/fulfilled') {\n        formik.resetForm();\n      }\n      \n      // formik.resetForm();\n      \n    },\n  \n  });\n\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n\n\n  return (\n    <MainContainer elevation={1}>\n    \n    \n      <TittleContainer >\n        <Title>Create a PHONEBOOK account</Title>\n      </TittleContainer>\n      \n        <Formm  autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          \n            <Input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              // variant=\"standard\" \n          label=\"username\"\n              \n              value={formik.values.username}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.username && Boolean(formik.errors.username)}\n          helperText={formik.touched.username && formik.errors.username}\n              \n            />\n          \n          \n          \n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n         \n          label=\"email\"\n             \n              value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n            />\n            \n          \n            <InputFormControl\n            variant=\"outlined\"\n            error={formik.touched.password && Boolean(formik.errors.password)}\n           \n            \n            >\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput \n              id=\"outlined-adornment-password\"\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              label=\"Password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n\n              endAdornment={\n                <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n               }\n              />\n\n              <FormHelperText id=\"password\">\n                 {formik.touched.password && formik.errors.password}\n               </FormHelperText>\n              </InputFormControl> \n\n           \n          <Button  type=\"submit\" color=\"primary\"  variant=\"contained\" fullWidth>\n            Register\n          </Button>\n        </Formm>\n\n        <RegisterOrLoginBox>\n        Already have an account?   <RegisterOrLoginLink to=\"/login\">Log In</RegisterOrLoginLink>\n        \n        </RegisterOrLoginBox>\n      \n    </MainContainer>\n  );\n};\n\n","// import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <section>\n      \n        <title>Registration</title>\n      \n      <RegisterForm />\n    </section>\n  );\n}"],"names":["validationSchemaRegistation","yup","shape","username","min","required","email","password","max","validationSchemaLogin","MainContainer","styled","Paper","_templateObject","_taggedTemplateLiteral","TittleContainer","Box","_templateObject2","Title","_templateObject3","Formm","_templateObject4","Input","TextField","_templateObject5","InputFormControl","FormControl","_templateObject6","RegisterOrLoginBox","_templateObject7","RegisterOrLoginLink","Link","_templateObject8","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","res","wrap","_context","prev","next","register","name","sent","console","log","type","resetForm","stop","_x","apply","arguments","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","elevation","children","_jsx","autoComplete","handleSubmit","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","edge","VisibilityOff","Visibility","FormHelperText","Button","color","fullWidth","to","Register"],"sourceRoot":""}